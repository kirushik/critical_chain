version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.4.0

jobs:
  build:
    parallelism: 2
    docker:
      - image: cimg/ruby:3.1.2-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
          CACHE_VERSION: 1
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      
      - checkout

      - restore_cache:
          keys:
            - criticalchain-bundle-{{ .Environment.CACHE_VERSION }}-{{ checksum "Gemfile.lock" }}
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - save_cache:
          key: criticalchain-bundle-{{ .Environment.CACHE_VERSION }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Database setup
          command: bundle exec rake db:schema:load --trace

      - run:
          name: Run rspec with JUnit formatter
          shell: /bin/bash
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - store_test_results:
          path: test_results


  deploy:
    machine:
      enabled: true
    working_directory: ~/circleci-demo-workflows
    environment:
      HEROKU_APP: criticalchain
    steps:
      - checkout
      - run:
          command: bash .circleci/setup-heroku.sh
      - run:
          command: heroku git:remote -a criticalchain
      - run:
          command: heroku pg:backups capture --app criticalchain
      - run:
          command: heroku maintenance:on --app criticalchain
      - run:
          command: git push https://heroku:${HEROKU_API_KEY}@git.heroku.com/criticalchain.git $CIRCLE_SHA1:refs/heads/master
      - run:
          command: heroku run rake db:migrate --app criticalchain
      - run:
          command: heroku maintenance:off --app criticalchain

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
